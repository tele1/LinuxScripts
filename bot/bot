#!/bin/bash


#############################################################

# A multi-functional script that makes life easier.
VERSION="beta 6"
LICENCE="GPL v3: https://www.gnu.org/licenses/gpl.html "
SOURCE="https://github.com/tele1/LinuxScripts"

#############################################################




#===================================================={
#----------------------{
Func_IF_SOURCE_EXIST()  {
    if [[ -f "$1" ]] ; then
        source "$1"
    else
        echo "Error: Source not found: $1" ; exit 1
    fi
}
#----------------------}

Path_Of_Script="$(dirname "$(realpath $0)")"
Func_IF_SOURCE_EXIST "$Path_Of_Script"/data/builtin/colors.bash
Func_IF_SOURCE_EXIST "$Path_Of_Script"/data/builtin/read.bash

# Load all " mods "
for Path_Of_Mod in $( ls "$Path_Of_Script"/data/mods/*.bash ) ; do 
    Func_IF_SOURCE_EXIST "$Path_Of_Mod"
done
#====================================================}




#======================================================{
FuncCommand() {

## For read $1
set -- $MyCommand

    case "$1" in
	    "--help"|"-h"|"h")
		    echo "  All options: "
		    echo " "
		    echo "     --help  -h  h           - Display this help"
		    echo " "
		    echo "      q                      - Quit"
		    echo " "
		    echo "      v                      - Version"


		    ##      Load functions " Func_main_help_* " from /bot/data/mods/*.bash
		    for Var_Of_Func_main_help in $( compgen -A function | grep "Func_main_help" ) ; do
		        "$Var_Of_Func_main_help"
		    done
		    
		    
		    echo " "
		    echo "  Have a nice day! :)"
	    ;;
	    "q") 
	        FuncGREEN_ECHO "    Bye !" ; exit 0
	    ;;
	    "v")
	        echo "      Version = $VERSION"
	    ;; 
	    *)  ## This section loads scripts from /bot/data/mods/
	        #------------------------------{
	        List_Of_Funcs_Main_Case=$( compgen -A function | grep "Func_main_case" )
            Status_Break=""
            
            for Var_Of_Func_Main_Case in $List_Of_Funcs_Main_Case ; do
                $Var_Of_Func_Main_Case "$@"
                if [[ "$Status_Break" == "break" ]] ; then
                    break
                fi
            done
	    
	        if [[ ! $Status_Break == "break" ]] ; then
		        echo "Unknown option: $1"
		        echo "	Try use: $0 --help"
		    fi
		    #------------------------------}
	    ;; 
    esac
}
#======================================================}




#======================================================================{
## command tput in read.bash file it's specific, so I'll use it for now "reset"
reset

FuncGREEN_ECHO " Alice: Hello!"
while : ; do
    FuncGREEN_ECHO " Alice: Co mogę dla Ciebie zrobić? "
    echo " "
    TEXT_IM=$(FuncYELLOW_ECHO " $USER: ")
#    read -r -p  "$TEXT_IM" MyCommand

    # For read any key pressed ; This is not a perfect solution. 
    FuncREAD "$TEXT_IM" 
    MyCommand=$(tail -n1 "$Path_Of_Script"/data/memory/History.txt)


    echo " "
    echo " "
    FuncGREEN_ECHO " Alice:"
    
    #echo "$MyCommand"
    FuncCommand         "$MyCommand"

    #echo "Alice: Done"         ## For debug "while" above
    echo "  " 
    echo "----------------------"
    echo " "
done

exit 0
#======================================================================}


