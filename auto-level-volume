#!/bin/bash


#=============================================================================={
##    Destiny:    For automatic volume control.
     VERSION="3" 
##    Date:       2024.04.29 (Year.Month.Day) 
##    License:    GNU GPL v.3   http://www.gnu.org/licenses/gpl-3.0.en.html 
##    Source:   https://github.com/tele1/LinuxScripts
##    Script usage:   bash auto-level-volume
##    To check only directly from the website:
##      curl -L https://raw.githubusercontent.com/tele1/LinuxScripts/main/auto-level-volume | bash

#==============================================================================}
 
#=============================================================================={
# Check Dependecies - List created automatically by find-bash-dep version=10 
# source=https://github.com/tele1/LinuxScripts
 
[[ -z $(type -P amixer) ]] && DEP="$DEP"$'\n'"amixer"
[[ -z $(type -P echo) ]] && DEP="$DEP"$'\n'"echo"
[[ -z $(type -P grep) ]] && DEP="$DEP"$'\n'"grep"
[[ -z $(type -P sleep) ]] && DEP="$DEP"$'\n'"sleep"
[[ -z $(type -P true) ]] && DEP="$DEP"$'\n'"true"
[[ -z $(type -P true) ]] && DEP="$DEP"$'\n'"pactl"
 
# End script if exist any error
[ -z "$DEP" ] || { echo "   Error: Missing dependencies, before run script please install: $DEP"  ; exit 1  ;}
 
#     Used Packages: alsa-utils, 
#                   pulseaudio-utils: /usr/bin/pactl
#=============================================================================={

#=============================={
##   ==== SETTINGS: ====
Volume_of_External_Speakers="70%"
Volume_of_Headphones="20%"
#==============================}

#======================={
#   Things to do:
#   1. Close app if exist error, example from "amixer get Headphone".
#   2. "arecord" shows the volume of the music in the recording, 
#        but it is not the volume after all changes that is output from the computer.
#   3. Add GUI for change default level volumes.
#=======================}

F_Green_Info() {
    echo -e "\e[1;32m  Info: ${1} \e[0m'"
}

F_If_Quiet() {
    if [[ ! "$QUIET" == "ON" ]] ; then
        ${@}
    fi
}

#------------------------------------------------------------------------------{
Func_Main_Code() {

while true; do

#    arecord -f "cd" "/dev/null" -d 1 -V "stereo"


#   2. "arecord" shows the volume of the music in the recording, 
#        but it is not the volume after all changes that is output from the computer.
    Output="$(arecord -f "cd" "/dev/null" -d 1 -V "mono" 2>&1 |  grep -o '[0-9]*' |tail -n9 | sort |tail -n1) "
    F_If_Quiet echo "Sound level in player = $Output %"
    F_If_Quiet echo "Master volume = $(amixer -D pulse sget Master | grep "Front Left:" | awk '{print $5}') "
    F_If_Quiet echo "Volume of music players: "
    F_If_Quiet echo " $(pactl list sink-inputs | grep % | awk -F "/" '{ print $2 }') "
    
    
    

    if amixer get Headphone | grep -q "off"; then
        State_New="off"
        if [[ ! "$State_New" == "$State_Old" ]] ;then
            F_If_Quiet F_Green_Info "  Headphones disconnected"
            amixer -D pulse sset Master 70% > /dev/null
            F_If_Quiet F_Green_Info "  A new master volume level is set."
        fi
        State_Old="off"
    else
        State_New="on"
        if [[ ! "$State_New" == "$State_Old" ]] ;then
            F_If_Quiet F_Green_Info "  Headphones connected"
            amixer -D pulse sset Master 20% > /dev/null
            F_If_Quiet F_Green_Info "  A new master volume level is set."
        fi
        State_Old="on"
    fi

    F_If_Quiet echo " "
    sleep 1
done

}
#------------------------------------------------------------------------------}

F_GUI() {
    yad --form --title="Default Settings." --width=700 --height=150 \
    --field="   Change default settings if you need:":LBL \
    --field="Volume of External Speakers:":SCL 0 "${Volume_of_External_Speakers}" \
    --field="Volume of Headphones":SCL "${Volume_of_Headphones}" \
    --field="Warning: \n    Options / numbers for SCL are missing inside my \"man yad\" . \n \
    So yad may not display real values from settings. \n \
    my yad --version = 0.40.0 (GTK+ 3.24.33)":LBL 
    
}


case "$1" in
	"--gui"|"-g")
	    F_Green_Info "GUI started."
	    F_GUI
	;;
	"--quiet"|"-q")
		QUIET=ON
		Func_Main_Code
	;;
	"--help"|"-h")
		echo "---------------------------------------------------------"
		echo "usage: $0 --option"
		echo " "
		echo " Main:"
		echo "   --gui        -g     Only run GUI for set variables."
		echo "                       Not completed / It's not fully working yet."
		echo "   --quiet      -q     Quiet mode for linux deamon."
		echo "   --help       -h     show help"
		echo " "
		echo "---------------------------------------------------------"
		exit
	;;
	*)
        Func_Main_Code
	;;
esac
