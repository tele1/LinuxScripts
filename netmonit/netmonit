#!/bin/bash


# Developed for Linux
# License: GNU GPL v.3		http://www.gnu.org/licenses/gpl-3.0.en.html
# Version 10
# Destiny: Network connection statistics 
# Script usage: bash script --help


##	LINKS:
##	https://askubuntu.com/questions/993253/is-networkmanager-sending-http-requests-to-googleusercontent-com
##	http://karunsubramanian.com/network/what-is-syn_sent-socket-status/


# Check root running
[[ $EUID -ne 0 ]] && echo -e "'\e[0;31m' This script must be run as root. '\e[0m'" && exit 1

#   Need for run lib from other place
REAL_DIR_PATH_NETMONIT="$(dirname "$(realpath $0)")"

#  netmonit dependecies
source "$REAL_DIR_PATH_NETMONIT"/lib/lib.netmonit.dep
source "$REAL_DIR_PATH_NETMONIT"/lib/lib.colors
source "$REAL_DIR_PATH_NETMONIT"/lib/lib.pstree
source "$REAL_DIR_PATH_NETMONIT"/lib/lib.comm
source "$REAL_DIR_PATH_NETMONIT"/lib/lib.netmonit.help
source "$REAL_DIR_PATH_NETMONIT"/lib/lib.short
source "$REAL_DIR_PATH_NETMONIT"/lib/lib.debug


#======================================================{
LEVEL11() {
while (($#)) ; do
	#echo "loop = $# "
	case "$1" in
	--shorten) V_SHORTEN=1     ;;
	--loop-sleep) V_LOOP_S=2   ;;
	--loop-ip)    V_LOOP_IP=2  ;;
	# --loop-sleep-only-new --> It only displays when there are new connections 
	--loop-sleep-only-new) V_LOOP_S=2 ;  V_SHORTEN=1 ; V_NEW=1 ;;
	--catch)  V_CATCH=3  ; shift ; 

	#---------------------------{
		[[ -z "$1" ]] && { echo "Error: First  argument $1  of --catch is empty" ; exit 1 ;}
		[[ -z "$2" ]] && { echo "Error: Second argument $2  of --catch is empty" ; exit 1 ;}

		case "$1" in
			pid)  CATCH=pid  ; NAME="$2" ;;
			name) CATCH=name ; NAME="$2" ;;
			*) 	echo "Error: With argument --catch . Wrong next argument: $1 " 
				echo "Available arguments: "
				echo "	pid" 
				echo "	name" 
				exit ;;
		esac
		shift
	#---------------------------}
		shift
	;;
	##	Working only with loop
	--catch-all-new) CATCH=all-new ; NAME="$2" ;;
	--ps-tree) TREE=1 ;;
	--my-tree) TREE=2 ;;
	--my-tree-full) TREE=2 ; TREE_FULL=1 ;;
	--log-all) V_LOG=4 ;;
	#--log-only-new)   V_LOG=5 ;;
	*) echo "Error: Wrong argument: $1 "  ; exit ;;
	esac
	shift
done

#[[ $V_SHORTEN == 1 ]] && { [[ -z "$WAY" ]] && { echo "Error:  variable WAY is empty" ; exit 1 ;} ;}


DEBUG_1 "--loop = $V_SLEEP ; --shorten = $V_SHORTEN;  ; --catch... V_CATCH= $V_CATCH -> $CATCH $NAME ; V_LOG = $V_LOG ; --tree = $TREE"
DEBUG_1 =====================================





##	More in lib/lib.short
if [[ "$V_LOOP_S" == 2 ]] ; then
	while true ; do
		COMMAND.IN.WHILE
		sleep 1
	done

elif [[ "$V_LOOP_IP" == 2 ]] ; then
	while inotifywait  -q -e modify,delete_self,move_self /var/log/iptables.log &>/dev/null ; do
		if [ ! -f '/var/log/iptables.log' ]; then
			echo "Error:	Missing /var/log/iptables.log file."
			echo "	This is for advanced users ! Because you need to configure the iptables firewall alone."
			echo "	You can try search more in:"
			echo "	command --help"
			echo " "
			exit 0
		fi
		COMMAND.IN.WHILE
	done

else
	if [[ "$V_SHORTEN" == 1 ]] ; then
		F.SHORT
	else
		${COMM}
	fi
fi

} 
#======================================================}


#============================================={
case $1 in
	--my-tree) PID="$2" ; TREE=2
		# F.TREE is part of lib/lib.short
		F.TREE
		echo "$PROC_PSTREE_OUT"
	;;
	--my-tree-full) PID="$2" ; TREE=2 ; TREE_FULL=1 ; F.TREE ; echo "$PROC_PSTREE_OUT" ;;
	--ps-tree)		pstree -ptsa "$2"  ;;
	--trees)		pstree -pa         ;;
	"--help"|"-h")		NETMONIT.HELP  ;;
	--display-log)		echo "Log displayed:"  ; 
						cat /var/log/netmonit.log
	#---------------------------{
	#	shift ; 
	#	case "$1" in
	#		--last-hour) l1=1 ;;
	#		--last-day)  l2=2 ;;
	#		--all)       l3=3 ;;
	#		*)  echo "Error: With argument --display-log . Wrong next argument $1 "
	#			echo "Available arguments: "
	#			echo "	--last-hour" 
	#			echo "	--last-day" 
	#			echo "	--all" 
	#			exit ;;
	#	esac
	#---------------------------}
		exit 0
	;;
	#--filter-log) echo "--filter-log"  ; shift ; 
	#---------------------------{
	#	case "$1" in
	#		--most-of-all) l1=1 ;;
	#		--least-of-all)  l2=2 ;;
	#		*)  echo "Error: With argument --filter-log . Wrong next argument $1 " 
	#			echo "Available arguments: "
	#			echo "	--most-of-all" 
	#			echo "	--least-of-all" 
	#			exit ;;
	#	esac
	#---------------------------}
	#	exit 0
	#;;
	--watch-log)      tail -f  /var/log/netmonit.log     ; exit 0 ;;
	--remove-log)       rm -v  /var/log/netmonit.log     ; exit 0 ;;
#====================
	--lsof)    COMM="COMM.LSOF"    ; shift ; LEVEL11 "$@" ;;
	--netstat) COMM="COMM.NETSTAT" ; shift ; LEVEL11 "$@" ;;
	--ss)      COMM="COMM.SS"      ; shift ; LEVEL11 "$@" ;;
#====================
    --catch-all-with-lsof)  COMM="COMM.CATCH.ALL.WITH.LSOF" ; LEVEL11 ;; 
    --add-to-cron)          COMM="ADD.TO.CRON" ; LEVEL11  ;;
    --remove-from-cron)     COMM="REMOVE.FROM.CRON" ; LEVEL11 ;;
#====================
	*)
		echo "Unknown argument: $1"
		echo "	Try use: $0 --help"
	;; 
esac
#=============================================}
	
